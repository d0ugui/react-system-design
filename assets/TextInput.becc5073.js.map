{"version":3,"file":"TextInput.becc5073.js","sources":["../../node_modules/phosphor-react/dist/icons/Envelope.esm.js","../../src/components/TextInput.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56a0,0,0,0,1,0,0Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"224 56 128 144 32 56 224 56\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM98.7,128,40,181.8V74.2Zm11.8,10.9,12.1,11a8,8,0,0,0,10.8,0l12.1-11L203.4,192H52.6ZM157.3,128,216,74.2V181.8Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Envelope = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nEnvelope.displayName = \"Envelope\";\n\nexport default Envelope;\n//# sourceMappingURL=Envelope.esm.js.map\n","import { Slot } from '@radix-ui/react-slot';\nimport { InputHTMLAttributes, ReactNode } from 'react';\n\nexport interface TextInputRootProps {\n  children: ReactNode;\n}\n\nfunction TextInputRoot(props: TextInputRootProps) {\n  return (\n    <div className=\"flex items-center gap-3 h-12 py-4 px-3 rounded bg-gray-800 w-full focus-within:ring-2 ring-cyan-300\">\n      {props.children}\n    </div>\n  )\n}\n\nTextInputRoot.displayName = 'TextInput.Root'\n\nexport interface TetxInputIconProps {\n  children: ReactNode;\n}\n\nfunction TextInputIcon(props: TetxInputIconProps) {\n  return (\n    <Slot className=\"w-6 h-6 text-gray-400\">\n      {props.children}\n    </Slot>\n  )\n}\n\nTextInputIcon.displayName = 'TextInput.Icon'\n\nexport interface TextInputInputProps extends InputHTMLAttributes<HTMLInputElement> {}\n\nfunction TextInputInput(props: TextInputInputProps) {\n  return (\n    <input \n      className=\"bg-transparent flex-1 text-gray-100 text-xs placeholder:text-gray-400 outline-none\"\n      {...props}\n    />\n  )\n}\n\nTextInputInput.displayName = 'TextInput.Input'\n\nexport const TextInput = {\n  Root: TextInputRoot,\n  Input: TextInputInput,\n  Icon: TextInputIcon\n}"],"names":["pathsByWeight","Map","set","color","_jsxs","_Fragment","children","_jsx","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","x1","y1","x2","y2","opacity","renderPath","__name","weight","renderPathForWeight","Envelope","forwardRef","props","ref","IconBase","Object","assign","displayName","Envelope$1","TextInputRoot","className","TextInputIcon","Slot","TextInputInput","TextInput","Root","Input","Icon"],"mappings":"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"}